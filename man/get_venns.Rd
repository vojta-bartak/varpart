% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/varpart.R
\name{get_venns}
\alias{get_venns}
\title{Computes the Venn's/Euler's diagrams for a given deviance partitioning as returned by the function devpart.}
\usage{
get_venns(
  parts,
  method = c("eulerr", "mc", "polygons", "venneuler"),
  npoints = 10000,
  min_share = NULL
)
}
\arguments{
\item{parts}{Numeric vector of length 8, with deviance partitioning as returned by the function devpart.}

\item{method}{Character specifying the method used to optimize the size and position of diagram circles. One of "eulerr" (default), "mc", "polygons", "venneuler" (See Details).}

\item{npoints}{Integer specifying the number of random points used in the method "mc" for Monte Carlo estimation of areas of circles' intersections. Deafult is 10,000.}

\item{min_share}{Numeric specifying the minimum area of intersection (in the explained-deviance units), which is taken into account in the optimization. Experimenting with this parameter is recommended to get optimal result.}
}
\value{
A list of two elements:
parts ... numeric vector with the input deviance partitioning, with the negative values set to zero.
pars ... numeric vector with parameters of the optimized circles corresponding as much as possible to the input deviance partitioning.
}
\description{
Computes the Venn's/Euler's diagrams for a given deviance partitioning as returned by the function devpart.
}
\details{
Method "eulerr" (deafult) uses the package eulerr (Larsson, 2022). It is the fastest method usually with the best result.
Method "mc" first identifies the size of all circles and then uses nloptr package (Steven G. Johnson, https://nlopt.readthedocs.io/en/latest/) to optimize their positions. The MMA optimization algorithm is used, which allows for inequality constraints ensuring all three circles have nonzero intersection. The area of each particular solution is estimated using the Monte Carlo method, with the number of random points determined by the npoints parameter.
Method "polygons" is similar to the "mc", but the area of individual polygons is determined using the sf package (Pebesma, 2018). This method is slow and is not recommended.
Method "venneuler" uses the venneuler package (Wilkinson, 2022) to optimize the circles' parameters. It is relatively fast, but the results are usually suboptimal compared to the eulerr method. It relies on a Java library, which can cause problems.
After the computation, the solution is evaluated based on percentual overlap with the required intersections. This information is printed.
}
